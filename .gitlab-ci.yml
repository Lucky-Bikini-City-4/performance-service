# 사용할 도커 이미지
image: openjdk:17-jdk-slim

# 파이프라인에 사용될 변수들
variables:
  BUILD_DIR: 'build/libs'
  ARTIFACT_NAME: 'performance-service-build.jar'

stages:
  - build
  - test
  - deploy

# 빌드 (Build) 단계
build:
  stage: build
  tags:
    - aws-ubuntu-docker
  script:
    - echo "Building the project..."
    - mkdir -p src/main/resources
    - echo "$APPLICATION_YML" > src/main/resources/application.yml
    - cp src/main/resources/application.yml ./application.yml
    - chmod +x gradlew
    - ./gradlew clean build -x test
    - echo "Build complete."
    # 빌드 완료 후 파일 확인
    - ls -la build/libs/
    - find build/libs/ -name "*.jar" -type f
  artifacts:
    paths:
      - build/libs/*.jar  # 모든 jar 파일 포함
      - application.yml
    expire_in: 1 hour
  only:
    - main
    - dev

# 테스트 (Test) 단계
test:
  stage: test
  tags:
    - aws-ubuntu-docker
  services:
    - redis:6-alpine  # 테스트용 Redis 서비스
  variables:
    REDIS_URL: "redis://redis:6379"
  script:
    - echo "Running tests..."
    - mkdir -p src/main/resources

    # 테스트용 application-test.yml 생성
    - |
      cat > src/main/resources/application-test.yml << 'EOF'
      spring:
        application:
          name: performance-service
        datasource:
          url: jdbc:h2:mem:testdb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
          username: sa
          password: 
          driver-class-name: org.h2.Driver
        h2:
          console:
            enabled: true
        jpa:
          hibernate:
            ddl-auto: create-drop
          show-sql: false
          properties:
            hibernate:
              format_sql: false
              dialect: org.hibernate.dialect.H2Dialect
        data:
          redis:
            host: redis
            port: 6379
            timeout: 2000ms
        cache:
          type: simple
        kafka:
          bootstrap-servers: localhost:9093
      redisson:
        lock:
          wait-time: 1000
          lease-time: 2000
      server:
        port: 0
      eureka:
        client:
          enabled: false
      springdoc:
        swagger-ui:
          enabled: false
        api-docs:
          enabled: false
      logging:
        level:
          org.springframework: WARN
          com.dayaeyak.performance: INFO
      EOF

    - chmod +x gradlew
    # 테스트 프로파일로 테스트 실행
    - ./gradlew test -Dspring.profiles.active=test
    - echo "All tests passed."
  dependencies:
    - build
  only:
    - main
    - dev